<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc>
  <web>PhenoTips</web>
  <name>ChartServiceMacros</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>PhenoTips.ChartService</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1332798937000</creationDate>
  <date>1332860349000</date>
  <contentUpdateDate>1332860349000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <template/>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content>{{velocity output="false"}}
#macro (_measurementCharts $options)
## ---------------------------------------------------------
## Initialization of 'global' vars
## ---------------------------------------------------------
#set ($wMeasurements = [])
#set ($hMeasurements = [])
#set ($hcMeasurements = [])
#set ($ocdMeasurements = [])
#set ($icdMeasurements = [])
#set ($measurements = {'weight' : [], 'height' : [], 'head_circumference' : [], 'ocd' : [], 'icd' : []})
#set ($ageLimits = {})
#set ($sex = false)
#set ($c = $xwiki.getDocument('PhenoTips.ChartGenerator').getContent())
#set ($service = $xwiki.getDocument('PhenoTips.ChartService'))
## ---------------------------------------------------------
## Build measurements data from objects
## ---------------------------------------------------------
#macro (_buildMeasurementsFromObjects $targetClassName $obj)
  #if (!$obj.getProperty('date_of_birth').value)
    #break
  #end
  #macro (_updateMeasurements $measurements $o $sourceName $age)
    #if ("$!{o.getProperty($sourceName).value}" != '')
      #if ("$!ageLimits.get($sourceName)" == '')
        #set ($discard = $ageLimits.put($sourceName, {}))
      #end
      #if (!($ageLimits.get($sourceName).min &lt;= $age))
        #set ($ageLimits.get($sourceName).min = $age)
      #end
      #if (!($ageLimits.get($sourceName).max &gt;= $age))
        #set ($ageLimits.get($sourceName).max = $age)
      #end
      #set ($discard = $measurements.add({'a': $age, 'x' : $o.getProperty($sourceName).value}))
    #end
  #end
  #set ($bDate = $xwiki.jodatime.getMutableDateTime($obj.getProperty('date_of_birth').value.time).toMutableDateTime($xwiki.jodatime.getUTCTimezone()))
  #foreach ($o in $doc.getObjects($targetClassName))
    #set ($mDate = $xwiki.jodatime.getMutableDateTime($o.getProperty('date').value.time).toMutableDateTime($xwiki.jodatime.getUTCTimezone()))
    #set ($age = $mDate.toInstant().minus($bDate.toInstant().getMillis()).toDateTime($xwiki.jodatime.getUTCTimezone()))
    #set ($age = ($age.year - 1970) * 12 + $age.monthOfYear - 1)
    #if ($age &gt;=0)
      #_updateMeasurements($wMeasurements $o 'weight' $age)
      #_updateMeasurements($hMeasurements $o 'height' $age)
      #_updateMeasurements($hcMeasurements $o 'head_circumference' $age)
      #_updateMeasurements($ocdMeasurements $o 'ocd' $age)
      #_updateMeasurements($icdMeasurements $o 'icd' $age)
    #end
  #end
  #set ($sex = $obj.getProperty('gender').value != 'F')
#end
## ---------------------------------------------------------
## Build measurements data from request
## ---------------------------------------------------------
#macro (_buildMeasurementsFromRequest)
  #macro (_buildMeasurementFromRequest $measurements $paramName $sourceName)
    #foreach ($m in $request.getParameterValues($paramName))
      #if ("$!{m}" != '')
        #set ($age = $mathtool.toInteger($ages.get($foreach.index)))
        #if ("$!ageLimits.get($sourceName)" == '')
          #set ($discard = $ageLimits.put($sourceName, {}))
        #end
        #if (!($ageLimits.get($sourceName).min &lt;= $age))
          #set ($ageLimits.get($sourceName).min = $age)
        #end
        #if (!($ageLimits.get($sourceName).max &gt;= $age))
          #set ($ageLimits.get($sourceName).max = $age)
        #end
        #set ($discard = $measurements.add({'a': $age, 'x' : $mathtool.toDouble($m)}))
      #end
    #end
  #end
  #set ($ages = $request.getParameterValues('a'))
  #_buildMeasurementFromRequest($wMeasurements 'w', 'weight')
  #_buildMeasurementFromRequest($hMeasurements 'h', 'height')
  #_buildMeasurementFromRequest($hcMeasurements 'c' 'head_circumference')
  #_buildMeasurementFromRequest($ocdMeasurements 'ocd' 'ocd')
  #_buildMeasurementFromRequest($icdMeasurements 'icd' 'icd')
  #set ($sex = ($request.getParameter('s') != 'F'))
#end
## ---------------------------------------------------------
## Detect compatible image "format" based on the crt browser
## ---------------------------------------------------------
#macro(_detectChartFormat)
  #set($userAgentStr = $request.getHeader("User-Agent"))
  #if ($userAgentStr.contains('MSIE'))
    #set($format = 'raster')
  #else
    #set($format = 'vector')
  #end
$format##
#end
## ---------------------------------------------------------
## Generate charts for a specific measurement
## ---------------------------------------------------------
#macro (_generateCharts $measurements $chartName $sourceName $paramName $title)
  #if ($ageLimits.get($sourceName).min &lt; 24 || $ageLimits.get($sourceName).max &lt; 36)
    #_generateChart($measurements, "${chartName}03" $paramName $title)
  #end
  #if ($ageLimits.get($sourceName).max &gt;= 36)
    #_generateChart($measurements, "${chartName}220" $paramName $title)
  #end
#end
## ---------------------------------------------------------
## Generate chart for a specific measurement and age span
## ---------------------------------------------------------
#macro (_generateChart $measurements $chartName $paramName $title)
  #if ($measurements.size() &gt; 0)
    #set ($chart = $chartName)
    #set ($svg = "#evaluate($c)")
    #set ($queryString = "n=${chartName}#if(!$sex)&amp;s=F#end")
    #foreach ($m in $measurements)
      #set ($queryString = "${queryString}&amp;a=${m.a}&amp;${paramName}=${m.x}")
    #end
    #if ($options.format == 'raster' || "#_detectChartFormat()" == 'raster')
      #set ($svg = $svg.replaceAll('\{\{/?html.*?}}', '').trim())
      #set ($src = $xwiki.svg.getSVGImageURL($svg, $chartHeight, $chartWidth))
    #else
      #set ($src = $service.getURL('get', "${queryString}&amp;standalone=1"))
    #end
    #if ($options.standalone)
      #if ($options.format == 'raster')
        $response.sendRedirect($src)
      #elseif($doc != $service || $xcontext.action != 'get')
        $response.sendRedirect($service.getURL('get', $queryString))
      #else
        $response.setContentType('image/svg+xml')
        $svg
      #end
    #else
      #if ($options.format == 'raster')
        #set ($img = "&lt;img style='width:100%' title='$title' src='$src'/&gt;")
      #else
        #set ($img = $svg.replaceAll('\{\{/?html.*?}}', '').trim())
      #end
      #if ($options.link)
        {{html clean="false"}}&lt;a target="_blank" href="$src" class="chart-wrapper"&gt;$img&lt;/a&gt;{{/html}}##
      #elseif ($options.fullscreen || $xcontext.action == 'export')
        {{html clean="false"}}&lt;div style="width:100%;"&gt;$img&lt;/div&gt;{{/html}}##
      #else
        {{html clean="false"}}&lt;div class="chart-wrapper"&gt;$img&lt;/div&gt;{{/html}}##
      #end
    #end
  #end
#end
## ---------------------------------------------------------
## Decide which method to use for building measurement data
## ---------------------------------------------------------
#if ($options.targetClassName &amp;&amp; $options.obj)
  #_buildMeasurementsFromObjects($options.targetClassName $options.obj)
#else
  #_buildMeasurementsFromRequest()
#end
## ---------------------------------------------------------
## Decide what charts to display and in which format
## ---------------------------------------------------------
#if ($options.chartName)
  ## ---------------------------------------------------------
  ## Generate the selected chart
  ## ---------------------------------------------------------
  #if ($options.chartName.startsWith('weight'))
    #_generateChart($wMeasurements, $options.chartName 'w' '')
  #elseif ($options.chartName.startsWith('height'))
    #_generateChart($hMeasurements, $options.chartName 'h' '')
  #elseif ($options.chartName.startsWith('hc'))
    #_generateChart($hcMeasurements, $options.chartName 'c' '')
  #elseif ($options.chartName.startsWith('ocd'))
    #_generateChart($ocdMeasurements, $options.chartName 'ocd' '')
  #elseif ($options.chartName.startsWith('icd'))
    #_generateChart($icdMeasurements, $options.chartName 'icd' '')
  #end
#else
  ## ---------------------------------------------------------
  ## Generate all the charts for all the available data
  ## ---------------------------------------------------------
  #_generateCharts($wMeasurements, 'weight' 'weight' 'w' 'Weight for age')
  #_generateCharts($hMeasurements, 'height' 'height' 'h' 'Height for age')
  #if ($ageLimits.get('head_circumference').min &lt;= 36)
    #_generateChart($hcMeasurements, 'hc03' 'c' 'Head circumference for age')
  #end
  #_generateCharts($ocdMeasurements, 'ocd' 'ocd' 'ocd' 'Outer canthal distance for age')
  #_generateCharts($icdMeasurements, 'icd' 'icd' 'icd' 'Inner canthal distance for age')
#end

## ---------------------------------------------------------
## All done
## ---------------------------------------------------------
#end## macro measurementCharts
{{/velocity}}</content>
</xwikidoc>
