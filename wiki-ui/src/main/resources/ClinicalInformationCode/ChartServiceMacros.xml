<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>ClinicalInformationCode</web>
<name>ChartServiceMacros</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>XWiki.Admin</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1332798937000</creationDate>
<date>1332802718000</date>
<contentUpdateDate>1332802718000</contentUpdateDate>
<version>1.15</version>
<title></title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>true</minorEdit>
<syntaxId>xwiki/2.0</syntaxId>
<hidden>false</hidden>
<content>{{velocity output=false}}
#macro (_measurementCharts $targetClassName $obj $vectorial)
## ---------------------------------------------------------
## Initialization of 'global' vars
## ---------------------------------------------------------
#set ($wMeasurements = [])
#set ($hMeasurements = [])
#set ($hcMeasurements = [])
#set ($ageLimits = {'weight' : {}, 'height' : {}, 'head_circumference' : {}})
#set ($sex = false)
#set ($c = $xwiki.getDocument('ClinicalInformationCode.ChartGenerator').getContent())
## ---------------------------------------------------------
## Build measurements data from objects
## ---------------------------------------------------------
#macro (_buildMeasurementsFromObjects $targetClassName $obj)
  #macro (_updateMeasurements $measurements $o $sourceName $age)
    #if ("$!{o.getProperty($sourceName).value}" != '')
      #if (!($ageLimits.get($sourceName).min &lt;= $age))
        #set ($ageLimits.get($sourceName).min = $age)
      #end
      #if (!($ageLimits.get($sourceName).max &gt;= $age))
        #set ($ageLimits.get($sourceName).max = $age)
      #end
      #set ($discard = $measurements.add({'a': $age, 'x' : $o.getProperty($sourceName).value}))
    #end
  #end
  #set ($bDate = $obj.getProperty('date_of_birth').value.time)
  #foreach ($o in $doc.getObjects($targetClassName))
    #set ($mDate = $xwiki.jodatime.getMutableDateTime($o.getProperty('date').value.time))
    #set ($age = $mDate.toInstant().minus($bDate).toDateTime())
    #set ($age = ($age.year - 1970) * 12 + $age.monthOfYear)
    #_updateMeasurements($wMeasurements $o 'weight' $age)
    #_updateMeasurements($hMeasurements $o 'height' $age)
    #_updateMeasurements($hcMeasurements $o 'head_circumference' $age)
  #end
  #set ($sex = $obj.getProperty('gender').value != 'F')
#end
## ---------------------------------------------------------
## Build measurements data from request
## ---------------------------------------------------------
#macro (_buildMeasurementsFromRequest)
  #macro (_buildMeasurementFromRequest $measurements $paramName $sourceName)
    #foreach ($m in $request.getParameterValues($paramName))
      #if ("$!{m}" != '')
        #set ($age = $mathtool.toInteger($ages.get($foreach.index)))
        #if (!($ageLimits.get($sourceName).min &lt;= $age))
          #set ($ageLimits.get($sourceName).min = $age)
        #end
        #if (!($ageLimits.get($sourceName).max &gt;= $age))
          #set ($ageLimits.get($sourceName).max = $age)
        #end
        #set ($discard = $measurements.add({'a': $age, 'x' : $mathtool.toDouble($m)}))
      #end
    #end
  #end
  #set ($ages = $request.getParameterValues('a'))
  #_buildMeasurementFromRequest($wMeasurements 'w', 'weight')
  #_buildMeasurementFromRequest($hMeasurements 'h', 'height')
  #_buildMeasurementFromRequest($hcMeasurements 'c' 'head_circumference')
  #set ($sex = ($request.getParameter('s') != 'F'))
#end
## ---------------------------------------------------------
## Generate charts for a specific measurement
## ---------------------------------------------------------
#macro (_generateCharts $measurements $chartName $sourceName $title)
  #if ($ageLimits.get($sourceName).min &lt; 24 || $ageLimits.get($sourceName).max &lt; 36)
    #_generateChart($measurements, "${chartName}03" $title)
  #end
  #if ($ageLimits.get($sourceName).max &gt;= 36)
    #_generateChart($measurements, "${chartName}220" $title)
  #end
#end
## ---------------------------------------------------------
## Generate chart for a specific measurement and age span
## ---------------------------------------------------------
#macro (_generateChart $measurements, $chartName $title)
  #if ($measurements.size() &gt; 0)
    #set ($chart = $chartName)
    #set ($svg = "#evaluate($c)")
    #set ($svg = $svg.replaceAll('\{\{/?html.*?}}', '').trim())
    #set ($src = $xwiki.svg.getSVGImageURL($svg, $chartHeight, $chartWidth))
    {{html}}&lt;a #if ($xcontext.action == 'edit')target="_blank"#{else}rel="__blank"#end href="$src" style="display:inline-block;width:32%;margin-left:1%"&gt;&lt;img style="width:100%" title="$title" src="$src"/&gt;&lt;/a&gt;{{/html}}##
  #end
#end
## ---------------------------------------------------------
## Decide which method to use for building measurement data
## ---------------------------------------------------------
#if ($targetClassName &amp;&amp; $obj)
  #_buildMeasurementsFromObjects($targetClassName $obj)
#else
  #_buildMeasurementsFromRequest()
#end
## ---------------------------------------------------------
## Generate all the charts for all the available data
## ---------------------------------------------------------
#_generateCharts($wMeasurements, 'weight' 'weight' 'Weight for age')
#_generateCharts($hMeasurements, 'height' 'height' 'Height for age')
#if ($ageLimits.get('head_circumference').min &lt;= 36)
  #_generateChart($hcMeasurements, 'hc03' 'Head circumference for age')
#end
## ---------------------------------------------------------
## All done
## ---------------------------------------------------------
#end## macro measurementCharts
{{/velocity}}</content></xwikidoc>
