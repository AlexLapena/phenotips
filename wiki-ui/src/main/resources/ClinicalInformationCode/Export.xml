<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>ClinicalInformationCode</web>
<name>Export</name>
<language></language>
<defaultLanguage></defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>xwiki:XWiki.Admin</creator>
<author>xwiki:XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>xwiki:XWiki.Admin</contentAuthor>
<creationDate>1341433524000</creationDate>
<date>1341890547000</date>
<contentUpdateDate>1341890547000</contentUpdateDate>
<version>1.1</version>
<title></title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/2.0</syntaxId>
<hidden>false</hidden>
<content>{{velocity wiki="false"}}
#set ($targetSpace = "$!{request.space}")
#if (!$targetSpace || $targetSpace == 'ClinicalInformationCode')
  #break
#end
#set ($preferencesObject = $xwiki.getDocument("${targetSpace}.WebHome").getObject('ClinicalInformationCode.DBConfigurationClass'))
#if (!$preferencesObject)
  #break
#end
#set ($targetClassName = $preferencesObject.getProperty('patientClass').value)
#set ($targetClass = $xwiki.getClass($targetClassName))
#set ($activeFields = $preferencesObject.getProperty('activeFields').value)
#set ($dateFormat = $xwiki.jodatime.getDateTimeFormatterForPattern('MM/dd/yyyy'))
#set ($query = ', BaseObject obj where doc.space = ? and obj.name = doc.fullName and obj.className = ?')
#set ($parameters = [$targetSpace, $targetClassName])
#set ($isFirstReferrer = true)
#foreach ($referrer in $request.getParameterValues('export_referrer'))
  #if ($referrer != '')
    #if ($isFirstReferrer)
      #set ($query = $query.concat(" and (doc.creator = ?"))
      #set ($isFirstReferrer = false)
    #else
      #set ($query = $query.concat(" or doc.creator = ?"))
    #end
    #set ($discard = $parameters.add($referrer))
  #end
#end
#if (!$isFirstReferrer)
  #set ($query = $query.concat(')'))
#end
#set ($isFirstPhenotype = true)
#if ("$!request.export_phenotype_combine" == 'any')
  #set ($separator = 'or')
#else
  #set ($separator = 'and')
#end
#foreach ($phenotype in $request.getParameterValues('export_phenotype'))
  #if ($phenotype != '')
    #if ($isFirstPhenotype)
      #set ($isFirstPhenotype = false)
      #if ("$!request.export_phenotype_subterms" == 'no')
        #set ($query = ", DBStringListProperty phenotype join phenotype.list as phenotypeValue ${query} and phenotype.id.id = obj.id and phenotype.id.name = 'phenotype' and (? in phenotypeValue")
      #else
        #set ($query = ", DBStringListProperty phenotype join phenotype.list as phenotypeValue ${query} and phenotype.id.id = obj.id and phenotype.id.name = 'extended_phenotype' and (? in phenotypeValue")
      #end
    #else
      #set ($query = $query.concat(" ${separator} ? in phenotypeValue"))
    #end
    #set ($discard = $parameters.add($phenotype))
  #end
#end
#if (!$isFirstPhenotype)
  #set ($query = $query.concat(')'))
#end
#set ($isFirstDisease = true)
#if ("$!request.export_disease_combine" == 'any')
  #set ($separator = 'or')
#else
  #set ($separator = 'and')
#end
#foreach ($disease in $request.getParameterValues('export_disease'))
  #if ($disease != '')
    #if ($isFirstDisease)
      #set ($query = ", DBStringListProperty disease join disease.list as diseaseValue ${query} and disease.id.id = obj.id and disease.id.name = 'omim_id' and (? in diseaseValue")
      #set ($isFirstDisease = false)
    #else
      #set ($query = $query.concat(" ${separator} ? in diseaseValue"))
    #end
    #set ($discard = $parameters.add($disease))
  #end
#end
#if (!$isFirstDisease)
  #set ($query = $query.concat(')'))
#end
#if ("$!request.export_creation_date_after" != '')
  #set ($date = $dateFormat.parseDateTime($request.export_creation_date_after))
  #set ($query = $query.concat(' and doc.creationDate &gt; ?'))
  #set ($discard = $parameters.add($date.toDate()))
#end
#if ("$!request.export_creation_date_before" != '')
  #set ($date = $dateFormat.parseDateTime($request.export_creation_date_before))
  #set ($query = $query.concat(' and doc.creationDate &lt; ?'))
  #set ($discard = $parameters.add($date.toDate()))
#end
#set ($hasBDate = false)
#if ("$!request.export_date_of_birth_after" != '')
  #set ($date = $dateFormat.parseDateTime($request.export_date_of_birth_after))
  #set ($query = ", DateProperty birthDate $query and birthDate.id.id = obj.id and birthDate.id.name = 'date_of_birth' and birthDate.value &gt; ?")
  #set ($discard = $parameters.add($date.toDate()))
  #set ($hasBDate = true)
#end
#if ("$!request.export_date_of_birth_before" != '')
  #set ($date = $dateFormat.parseDateTime($request.export_date_of_birth_before))
  #if ($hasBDate)
    #set ($query = "$query and birthDate.value &lt; ?")
  #else
    #set ($query = ", DateProperty birthDate $query and birthDate.id.id = obj.id and birthDate.id.name = 'date_of_birth' and birthDate.value &lt; ?")
  #end
  #set ($discard = $parameters.add($date.toDate()))
#end
#set ($patients = $xwiki.searchDocuments($query, $parameters))
#if ($request.count)
  $patients.size()
  #break
#end
#if ($patients.size() == 0)
  #break
#end
$response.addHeader("Content-disposition", "attachment; filename=cidb_${xwiki.formatDate($util.date, 'yyyy-MM-dd_HH-mm')}.csv")##
$response.setContentType('text/csv')##
#set ($codeProperties = ['phenotype', 'negative_phenotype', 'prenatal_phenotype', 'omim_id'])
#set ($enabledFields = $request.getParameterValues('columns'))
#set ($displayedFields = [])
#foreach ($field in $activeFields)
  #if ($enabledFields.contains($field))
    #set ($discard = $displayedFields.add($field))
  #elseif ($codeProperties.contains($field) &amp;&amp; $enabledFields.contains("${field}_code"))
    #set ($discard = $displayedFields.add($field))
  #end
#end
#if ($enabledFields.contains('doc.name'))ID,#end
#if ($enabledFields.contains('referrer'))Referrer,#end
#if ($enabledFields.contains('creationDate'))Date,#end
#foreach ($field in $displayedFields)
  #if ($codeProperties.contains($field) &amp;&amp; $enabledFields.contains("${field}_code"))
    ${targetClass.get($field).prettyName} (code)##
    #if ($enabledFields.contains($field)),#end
  #end
  #if ($enabledFields.contains($field))
    ${targetClass.get($field).prettyName}##
  #end
  #if ($foreach.hasNext)##
    ,##
  #end
#end

#foreach ($patient in $patients)
  #set ($patientDoc = $xwiki.getDocument($patient))
  #set ($patientObj = $patientDoc.getObject($targetClassName))
  #if ($enabledFields.contains('doc.name'))${patientDoc.documentReference.name},#end
  #if ($enabledFields.contains('referrer'))${xwiki.getUserName($patientDoc.creator, false)},#end
  #if ($enabledFields.contains('creationDate'))${patientDoc.creationDate},#end
  #foreach ($field in $displayedFields)
    #if ($codeProperties.contains($field))
      #if ($enabledFields.contains("${field}_code"))
        "##
        #foreach ($code in $!patientObj.getProperty($field).value)
          $code##
          #if ($foreach.hasNext)

          #end
        #end
        "##
        #if ($enabledFields.contains($field)),#end
      #end
      #if ($codeProperties.contains($field) &amp;&amp; $enabledFields.contains($field))
        "##
        #foreach ($code in $!patientObj.getProperty($field).value)
          #if ($field.endsWith('phenotype'))
            ${services.solr.get($code).name.replace('"', '""')}##
          #else
            ${services.omim.getName($code).replace('"', '""')}##
          #end
          #if ($foreach.hasNext)

          #end
        #end
        "##
      #end
    #else
      #set ($value = $!patientObj.getProperty($field).value)
      #if ("$!value.getTime()" != '')
        "${dateFormat.print($xwiki.jodatime.getDateTime($value.getTime()))}"##
      #else
        "${value.toString().replace('"', '""')}"##
      #end
    #end
    #if ($foreach.hasNext)##
      ,##
    #end
  #end

#end
{{/velocity}}</content></xwikidoc>
