<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>ClinicalInformationCode</web>
<name>ChartService</name>
<language></language>
<defaultLanguage></defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>xwiki:XWiki.Admin</creator>
<author>xwiki:XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>xwiki:XWiki.Admin</contentAuthor>
<creationDate>1332766503000</creationDate>
<date>1332775339000</date>
<contentUpdateDate>1332775339000</contentUpdateDate>
<version>1.1</version>
<title></title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/2.0</syntaxId>
<hidden>false</hidden>
<content>{{velocity}}
#set ($ages = $request.getParameterValues('a'))
#set ($sex = ($request.getParameter('s') != 'F'))
#set ($c = $xwiki.getDocument('ClinicalInformationCode.ChartGenerator').getContent())
#set ($ageLimits = {'w' : {}, 'h' : {}, 'c' : {}})
##
#macro (_generateChart $measurements, $chartName $title)
  #if ($measurements.size() &gt; 0)
    #set ($chart = $chartName)
    #set ($svg = "#evaluate($c)")
    #set ($svg = $svg.replaceAll('\{\{/?html.*?}}', '').trim())
    #set ($src = $xwiki.svg.getSVGImageURL($svg, $chartHeight, $chartWidth))
    #set ($w = $mathtool.idiv($mathtool.toInteger($request.width), 3))
    #if ($w &gt; 0 &amp;&amp; false)
      #set ($h = $chartHeight * $w / $chartWidth)
      #set ($tsrc = $xwiki.svg.getSVGImageURL($svg, $h, $w))
    #else
      #set ($tsrc = $src)
    #end
    #if (!$tsrc)
      #set ($tsrc = $src)
    #end
    {{html}}&lt;a target="_blank" href="$src" style="display:inline-block;width:32%;margin-left:1%"&gt;&lt;img style="width:100%" title="$title" src="$tsrc"/&gt;&lt;/a&gt;{{/html}}##
  #end
#end
#macro (_generateCharts $paramName, $chartName $title)
  #set ($measurements = [])
  #foreach ($m in $request.getParameterValues($paramName))
    #if ("$!{m}" != '')
      #set ($age = $mathtool.toInteger($ages.get($foreach.index)))
      #if (!($ageLimits.get($paramName).min &lt;= $age))
        #set ($ageLimits.get($paramName).min = $age)
      #end
      #if (!($ageLimits.get($paramName).max &gt;= $age))
        #set ($ageLimits.get($paramName).max = $age)
      #end
      #set ($discard = $measurements.add({'a': $age, 'x' : $mathtool.toDouble($m)}))
    #end
  #end
  #if ($ageLimits.get($paramName).min &lt; 24 || ($paramName == 'c' &amp;&amp; $ageLimits.get($paramName).min &lt;= 36) || $ageLimits.get($paramName).max &lt; 36)
    #_generateChart($measurements, "${chartName}03" $title)
  #end
  #if ($ageLimits.get($paramName).max &gt;= 36 &amp;&amp; ($paramName != 'c'))
    #_generateChart($measurements, "${chartName}220" $title)
  #end
#end
#_generateCharts('w', 'weight' 'Weight for age')
#_generateCharts('h', 'height' 'Height for age')
#_generateCharts('c', 'hc' 'Head circumference for age')
(% class="clear"%)((()))
{{/velocity}}</content></xwikidoc>
